class graph:
    def __init__(self,maxcol,matrix): 
        self.colours=[]
        self.maxcol=maxcol
        self.matrix=matrix
        for i in range(len(matrix)):
            self.colours.append(None)

    def graphcolouring(self):
        for i in range(len(self.matrix)):
            flag=0
            for col in range(self.maxcol):
                if(self.check(i,col)==True):
                    self.colours[i]=col
                    flag=1
            if(flag==0):
                print("Cannot Find the Solution")
                return
        g.print()
        
    def check(self,i,col):
        for k in range(len(self.matrix)):
            if(self.matrix[i][k]==1):
                if(self.colours[k]==col):
                    return False
        return True

    def print(self):
        for i in range(len(self.colours)):
            print("Node %d has Colour %d "%(i+1,self.colours[i]+1))
            
n=int(input("Enter Number of Nodes : "))
matrix=[]
print("Enter Adjecency Matrix : ")
for i in range(n):
   entry=list(map(int,input().split()))
   matrix.append(entry)

maxcol=int(input("Enter Number of Colours : "))
g=graph(maxcol,matrix)
g.graphcolouring()
